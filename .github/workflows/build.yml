name: Build binaries

on: push

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64

    runs-on: ${{ matrix.os }}
    env:
      GOARCH: ${{ matrix.arch }}
    steps:
      - name: Set up go
        id: go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Check out code
        uses: actions/checkout@v1

      - name: Restore go package cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.arch }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-go-

      - name: Cache ffmpeg
        id: cache-ffmpeg
        uses: actions/cache@v2
        with:
          path: ~/compiled
          key: ${{ runner.os }}-${{ matrix.arch }}-ffmpeg-${{ hashFiles('**/install_ffmpeg.sh') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-ffmpeg

      - name: Install ffmpeg
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        shell: bash
        run: |
          curl -s \
            https://raw.githubusercontent.com/livepeer/go-livepeer/master/install_ffmpeg.sh \
            | bash -

      - name: Download dependencies
        run: go mod download

      - name: Build
        shell: bash
        run: |
          mkdir -p build/ releases/
          export PKG_CONFIG_PATH=~/compiled/lib/pkgconfig
          make
          cd build
          mv task-runner livepeer-task-runner
          if [[ "${{ runner.os }}" == "Windows" ]]
          then
            mv livepeer-task-runner livepeer-task-runner.exe
            zip -9q "../releases/livepeer-task-runner-windows-amd64.zip" ./livepeer-task-runner.exe
          else
            tar -czvf "../releases/livepeer-task-runner-${{ runner.os }}-${{ matrix.arch }}.tar.gz" ./livepeer-task-runner
          fi
          cd -

      - name: Upload artifacts for processing further in linux
        uses: actions/upload-artifact@master
        with:
          name: release-artifacts
          path: releases/
